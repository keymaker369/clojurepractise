cmdhistory=["(-main)" "\\"dddd\\"" "(+ 5 7)" "(new String \\"test string\\")" "(def test-string (new String \\"test string\\"))" "(ns lainingen01.core)" "(def test-string (new String \\"test string\\"))" "(test-string)" "(println test-string)" "(def test-string2 (+ test-string \\" 2\\")" "(def test-string2 (+ \\"222\\" \\" 2\\")" "(def test-string2 (+ \\"222\\" \\" 2\\"))" "(.concat test-string \\" 2\\")" "(def test-string2 (.concat test-string \\" 2\\"))" "(println test-string2)" "(println test-string)" "(println test-string)\\n(println test-string2)" "(def test-string (new String \\"test stringnn\\"))" "(println test-string)\\n(println test-string2)" "(println (.size test-string))" "(println (.length test-string))" "(clojure.core/in-ns 'lainingen01.core)\\n(println test-string)\\n(clojure.core/in-ns 'user)" "(ns lainingen01.core)" "(println test-string)" "(println test-string2)" "(count test-string)" "'(test-string test-string2)" "(count '(test-string test-string2))" "(print-all-things '(test-string test-string2))" "(defn print-all-things [a-list-of-things]\\r\\n  (let [total (count a-list-of-things)]\\r\\n     (println \\"Total things\: \\" total)\\r\\n     (dorun (map println a-list-of-things))))\\r\\n" "(print-all-things '(test-string test-string2))" "(-main)" "(str \\"33r\\" 3 \\"dgwrg\\")" "(-main)" "(-> f pack\! show\!)" "(-main)" "(ns lainingen01.systry.core)" "(ns lainingen01.systry.core\\r\\n  (require [clj-systemtray.core \:as systray]))"]
eclipse.preferences.version=1
